tomcat:
  service:
    type: ClusterIP
    ports: 
      http: 8080
  image:
    registry: ghcr.io
    repository: circabc/tomcat-eusurvey-server-k8s
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "512Mi"  
      cpu: "250m"     
    limits:
      memory: "1Gi"    
      cpu: "500m"     
  lifecycleHooks:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "mv /usr/local/share/eusurvey.war /opt/bitnami/tomcat/webapps/eusurvey.war"]

  extraVolumeMounts:
    - name: usr-local-share-volume  
      mountPath: /usr/local/share
    - name: eusurveytemp
      mountPath: /eusurveytemp
  extraVolumes:
    - name: usr-local-share-volume  
      emptyDir: {}
    - name: eusurveytemp
      emptyDir: {}

  initContainers:
    - name: copy-eusurvey-war
      image: ghcr.io/circabc/tomcat-eusurvey-server-k8s:latest
      imagePullPolicy: IfNotPresent 
      command: ["/bin/sh", "-c", "mv /opt/bitnami/tomcat/webapps/eusurvey.war /usr/local/share/eusurvey.war"]
      volumeMounts:
        - name: usr-local-share-volume  
          mountPath: /usr/local/share

  extraEnvVars:
    - name: JAVA_OPTS
      value: "-Djava.awt.headless=true"  
  hostAliases:
  - ip: "192.168.49.1"
    hostnames:
    - "openldap"
    - "eulogin"

  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
    
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx  
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-name: "route"
      nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"    
    hostname: eusurvey
    path: /
    pathType: ImplementationSpecific  
    ingressClassName: nginx
    extraRules:
    - host: eusurvey
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: eusurvey-tomcat  
                port:
                  number: 8080
                  


mysql:
  auth:
    rootPassword: "password"
  primary:
    extraEnvVars:
      - name: EUSURVEY_MYSQL_DATABASE
        value: eusurveydb
      - name: EUSURVEY_MYSQL_USER
        value: eusurveyuser
      - name: EUSURVEY_MYSQL_PASSWORD
        value: eusurveyuser
      - name: EUSURVEY_MYSQL_ROOT_PASSWORD
        value: password

    configuration: |-
      [mysqld]
      default_authentication_plugin={{- .Values.auth.defaultAuthenticationPlugin | default "mysql_native_password" }}
      skip-name-resolve
      log_bin_trust_function_creators = 1
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port={{ .Values.primary.containerPorts.mysql }}
      mysqlx={{ ternary 1 0 .Values.primary.enableMySQLX }}
      mysqlx_port={{ .Values.primary.containerPorts.mysqlx }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      slow_query_log=0
      long_query_time=10.0

      [client]
      port={{ .Values.primary.containerPorts.mysql }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin

      [manager]
      port={{ .Values.primary.containerPorts.mysql }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

  initdbScripts:
    setup.sql: |
      CREATE DATABASE IF NOT EXISTS eusurveydb CHARACTER SET utf8 COLLATE utf8_general_ci;
      CREATE DATABASE IF NOT EXISTS eusurveyreportdb CHARACTER SET utf8 COLLATE utf8_general_ci;
      CREATE USER 'eusurveyuser'@'%' IDENTIFIED BY 'eusurveyuser'; 
      GRANT ALL PRIVILEGES ON eusurveydb.* TO 'eusurveyuser'@'%';
      GRANT EVENT ON *.* TO 'eusurveyuser'@'%';
      CREATE USER 'eusurveyruser'@'%' IDENTIFIED BY 'eusurveyruser'; 
      GRANT ALL PRIVILEGES ON eusurveyreportdb.* TO 'eusurveyruser'@'%';
      SET GLOBAL event_scheduler = ON;
      SET GLOBAL log_bin_trust_function_creators = 1;
      SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;
      USE eusurveydb;
      SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
      CREATE TABLE IF NOT EXISTS mv_surveys_numberpublishedanswers (
        SURVEYUID varchar(255) NOT NULL,
        PUBLISHEDANSWERS bigint(21) NOT NULL DEFAULT 0,
        LASTANSWER datetime DEFAULT NULL,
        MW_TIMESTAMP datetime DEFAULT NULL,
        KEY MV_SURVEYS_IND (SURVEYUID,PUBLISHEDANSWERS)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
      SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;